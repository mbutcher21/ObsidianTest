import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
import { Pagination } from '../pagination';
export declare class Group {
    private client;
    constructor(client: Client);
    /** Get a paginated collection of user groups */
    getGroups<T = Pagination<Models.Group>>(parameters: Parameters.GetGroups | undefined, callback: Callback<T>): Promise<void>;
    /** Get a paginated collection of user groups */
    getGroups<T = Pagination<Models.Group>>(parameters?: Parameters.GetGroups, callback?: never): Promise<T>;
    /** Get the user group with the group name */
    getGroup<T = Models.Group>(parameters: Parameters.GetGroup, callback: Callback<T>): Promise<void>;
    /** Get the user group with the group name */
    getGroup<T = Models.Group>(parameters: Parameters.GetGroup, callback?: never): Promise<T>;
    /** Get a paginated collection of users in the given group */
    getMembers<T = Pagination<Models.User>>(parameters: Parameters.GetMembers, callback: Callback<T>): Promise<void>;
    /** Get a paginated collection of users in the given group */
    getMembers<T = Pagination<Models.User>>(parameters: Parameters.GetMembers, callback?: never): Promise<T>;
}
