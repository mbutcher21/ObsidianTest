import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class ContentBody {
    private client;
    constructor(client: Client);
    /**
     * Converts between content body representations. Not all representations can be converted to/from other formats.
     * Supported conversions:
     *
     * - Storageview, export_view, styled_view, editor
     * - Editorstorage
     * - ViewNone
     * - Export_viewNone
     * - Styled_viewNone
     */
    convertContentBody<T = Models.ContentBody>(parameters: Parameters.ConvertContentBody, callback: Callback<T>): Promise<void>;
    /**
     * Converts between content body representations. Not all representations can be converted to/from other formats.
     * Supported conversions:
     *
     * - Storageview, export_view, styled_view, editor
     * - Editorstorage
     * - ViewNone
     * - Export_viewNone
     * - Styled_viewNone
     */
    convertContentBody<T = Models.ContentBody>(parameters: Parameters.ConvertContentBody, callback?: never): Promise<T>;
}
