import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
import { Pagination } from '../pagination';
export declare class LongTask {
    private client;
    constructor(client: Client);
    /** Returns information about all tracked long-running tasks. */
    getTasks<T = Pagination<Models.LongTaskStatus>>(parameters: Parameters.GetTasks | undefined, callback: Callback<T>): Promise<void>;
    /** Returns information about all tracked long-running tasks. */
    getTasks<T = Pagination<Models.LongTaskStatus>>(parameters?: Parameters.GetTasks, callback?: never): Promise<T>;
    /** Returns information about a long-running task. */
    getTask<T = Models.LongTaskStatus>(parameters: Parameters.GetTask, callback: Callback<T>): Promise<void>;
    /** Returns information about a long-running task. */
    getTask<T = Models.LongTaskStatus>(parameters: Parameters.GetTask, callback?: never): Promise<T>;
}
