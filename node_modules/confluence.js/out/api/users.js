"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Users = void 0;
const tslib_1 = require("tslib");
class Users {
    constructor(client) {
        this.client = client;
    }
    getUser(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user',
                method: 'GET',
                params: {
                    key: parameters.key,
                    username: parameters.username,
                    accountId: parameters.accountId,
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAnonymousUser(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/anonymous',
                method: 'GET',
                params: {
                    expand: parameters === null || parameters === void 0 ? void 0 : parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getCurrentUser(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/current',
                method: 'GET',
                params: {
                    expand: parameters === null || parameters === void 0 ? void 0 : parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getGroupMembershipsForUser(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/memberof',
                method: 'GET',
                params: {
                    key: parameters.key,
                    username: parameters.username,
                    accountId: parameters.accountId,
                    start: parameters.start,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getBulkUserLookup(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/bulk',
                method: 'GET',
                params: {
                    accountId: parameters.accountId,
                    expand: parameters.expand,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getPrivacyUnsafeUserEmail(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/email',
                method: 'GET',
                params: {
                    accountId: parameters.accountId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getPrivacyUnsafeUserEmailBulk(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/email/bulk',
                method: 'GET',
                params: {
                    accountId: parameters.accountId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getBulkUserMigration(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/user/bulk/migration',
                method: 'GET',
                params: {
                    key: parameters.key,
                    username: parameters.username,
                    start: parameters.start,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.Users = Users;
//# sourceMappingURL=users.js.map