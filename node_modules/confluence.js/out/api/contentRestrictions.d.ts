import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class ContentRestrictions {
    private client;
    constructor(client: Client);
    /**
     * Returns the restrictions on a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.GetRestrictions, callback: Callback<T>): Promise<void>;
    /**
     * Returns the restrictions on a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.GetRestrictions, callback?: never): Promise<T>;
    /**
     * Adds restrictions to a piece of content. Note, this does not change any existing restrictions on the content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.AddRestrictions, callback: Callback<T>): Promise<void>;
    /**
     * Adds restrictions to a piece of content. Note, this does not change any existing restrictions on the content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.AddRestrictions, callback?: never): Promise<T>;
    /**
     * Updates restrictions for a piece of content. This removes the existing restrictions and replaces them with the
     * restrictions in the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    updateRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.UpdateRestrictions, callback: Callback<T>): Promise<void>;
    /**
     * Updates restrictions for a piece of content. This removes the existing restrictions and replaces them with the
     * restrictions in the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    updateRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.UpdateRestrictions, callback?: never): Promise<T>;
    /**
     * Removes all restrictions (read and update) on a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    deleteRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.DeleteRestrictions, callback: Callback<T>): Promise<void>;
    /**
     * Removes all restrictions (read and update) on a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    deleteRestrictions<T = Models.ContentRestrictionArray>(parameters: Parameters.DeleteRestrictions, callback?: never): Promise<T>;
    /**
     * Returns restrictions on a piece of content by operation. This method is similar to [Get
     * restrictions](#api-content-id-restriction-get) except that the operations are properties of the return object,
     * rather than items in a results array.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictionsByOperation<T = Models.GetRestrictionsByOperation>(parameters: Parameters.GetRestrictionsByOperation, callback: Callback<T>): Promise<void>;
    /**
     * Returns restrictions on a piece of content by operation. This method is similar to [Get
     * restrictions](#api-content-id-restriction-get) except that the operations are properties of the return object,
     * rather than items in a results array.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictionsByOperation<T = Models.GetRestrictionsByOperation>(parameters: Parameters.GetRestrictionsByOperation, callback?: never): Promise<T>;
    /**
     * Returns the restictions on a piece of content for a given operation (read or update).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictionsForOperation<T = Models.ContentRestriction>(parameters: Parameters.GetRestrictionsForOperation, callback: Callback<T>): Promise<void>;
    /**
     * Returns the restictions on a piece of content for a given operation (read or update).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getRestrictionsForOperation<T = Models.ContentRestriction>(parameters: Parameters.GetRestrictionsForOperation, callback?: never): Promise<T>;
    /**
     * Returns whether the specified content restriction applies to a group. For example, if a page with `id=123` has a
     * `read` restriction for the `admins` group, the following request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/group/admins`
     *
     * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getContentRestrictionStatusForGroup<T = unknown>(parameters: Parameters.GetContentRestrictionStatusForGroup, callback: Callback<T>): Promise<void>;
    /**
     * Returns whether the specified content restriction applies to a group. For example, if a page with `id=123` has a
     * `read` restriction for the `admins` group, the following request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/group/admins`
     *
     * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getContentRestrictionStatusForGroup<T = unknown>(parameters: Parameters.GetContentRestrictionStatusForGroup, callback?: never): Promise<T>;
    /**
     * Adds a group to a content restriction. That is, grant read or update permission to the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addGroupToContentRestriction<T = unknown>(parameters: Parameters.AddGroupToContentRestriction, callback: Callback<T>): Promise<void>;
    /**
     * Adds a group to a content restriction. That is, grant read or update permission to the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addGroupToContentRestriction<T = unknown>(parameters: Parameters.AddGroupToContentRestriction, callback?: never): Promise<T>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeGroupByName<T = unknown>(parameters: Parameters.RemoveGroupByName, callback: Callback<T>): Promise<void>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeGroupByName<T = unknown>(parameters: Parameters.RemoveGroupByName, callback?: never): Promise<T>;
    /**
     * Returns whether the specified content restriction applies to a group. For example, if a page with `id=123` has a
     * `read` restriction for the `123456` group id, the following request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`
     *
     * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getIndividualGroupRestrictionStatusByGroupId<T = unknown>(parameters: Parameters.GetIndividualGroupRestrictionStatusByGroupId, callback: Callback<T>): Promise<void>;
    /**
     * Returns whether the specified content restriction applies to a group. For example, if a page with `id=123` has a
     * `read` restriction for the `123456` group id, the following request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`
     *
     * Note that a response of `true` does not guarantee that the group can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getIndividualGroupRestrictionStatusByGroupId<T = unknown>(parameters: Parameters.GetIndividualGroupRestrictionStatusByGroupId, callback?: never): Promise<T>;
    /**
     * Adds a group to a content restriction by Group Id. That is, grant read or update permission to the group for a
     * piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addGroupToContentRestrictionByGroupId<T = unknown>(parameters: Parameters.AddGroupToContentRestrictionByGroupId, callback: Callback<T>): Promise<void>;
    /**
     * Adds a group to a content restriction by Group Id. That is, grant read or update permission to the group for a
     * piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addGroupToContentRestrictionByGroupId<T = unknown>(parameters: Parameters.AddGroupToContentRestrictionByGroupId, callback?: never): Promise<T>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeGroupById<T = unknown>(parameters: Parameters.RemoveGroupById, callback: Callback<T>): Promise<void>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeGroupById<T = unknown>(parameters: Parameters.RemoveGroupById, callback?: never): Promise<T>;
    /**
     * Returns whether the specified content restriction applies to a user. For example, if a page with `id=123` has a
     * `read` restriction for a user with an account ID of `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following
     * request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`
     *
     * Note that a response of `true` does not guarantee that the user can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getContentRestrictionStatusForUser<T = unknown>(parameters: Parameters.GetContentRestrictionStatusForUser, callback: Callback<T>): Promise<void>;
    /**
     * Returns whether the specified content restriction applies to a user. For example, if a page with `id=123` has a
     * `read` restriction for a user with an account ID of `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following
     * request will return `true`:
     *
     * `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`
     *
     * Note that a response of `true` does not guarantee that the user can view the page, as it does not account for
     * account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence
     * permissions](https://confluence.atlassian.com/x/_AozKw).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     */
    getContentRestrictionStatusForUser<T = unknown>(parameters: Parameters.GetContentRestrictionStatusForUser, callback?: never): Promise<T>;
    /**
     * Adds a user to a content restriction. That is, grant read or update permission to the user for a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addUserToContentRestriction<T = unknown>(parameters: Parameters.AddUserToContentRestriction, callback: Callback<T>): Promise<void>;
    /**
     * Adds a user to a content restriction. That is, grant read or update permission to the user for a piece of content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    addUserToContentRestriction<T = unknown>(parameters: Parameters.AddUserToContentRestriction, callback?: never): Promise<T>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeUserFromContentRestriction<T = unknown>(parameters: Parameters.RemoveUserFromContentRestriction, callback: Callback<T>): Promise<void>;
    /**
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of
     * content.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     */
    removeUserFromContentRestriction<T = unknown>(parameters: Parameters.RemoveUserFromContentRestriction, callback?: never): Promise<T>;
}
