import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class ContentProperties {
    private client;
    constructor(client: Client);
    /**
     * Returns the properties for a piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, and
     * permission to view the content if it is a page.
     */
    getContentProperties<T = Models.ContentPropertyArray>(parameters: Parameters.GetContentProperties, callback: Callback<T>): Promise<void>;
    /**
     * Returns the properties for a piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, and
     * permission to view the content if it is a page.
     */
    getContentProperties<T = Models.ContentPropertyArray>(parameters: Parameters.GetContentProperties, callback?: never): Promise<T>;
    /**
     * Creates a property for an existing piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * This is the same as [Create content property for key](#api-content-id-property-key-post) except that the key is
     * specified in the request body instead of as a path parameter.
     *
     * Content properties can also be added when creating a new piece of content by including them in the
     * `metadata.properties` of the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createContentProperty<T = Models.ContentProperty>(parameters: Parameters.CreateContentProperty, callback: Callback<T>): Promise<void>;
    /**
     * Creates a property for an existing piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * This is the same as [Create content property for key](#api-content-id-property-key-post) except that the key is
     * specified in the request body instead of as a path parameter.
     *
     * Content properties can also be added when creating a new piece of content by including them in the
     * `metadata.properties` of the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createContentProperty<T = Models.ContentProperty>(parameters: Parameters.CreateContentProperty, callback?: never): Promise<T>;
    /**
     * Returns a content property for a piece of content. For more information, see [Confluence entity
     * properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, and
     * permission to view the content if it is a page.
     */
    getContentProperty<T = Models.ContentProperty>(parameters: Parameters.GetContentProperty, callback: Callback<T>): Promise<void>;
    /**
     * Returns a content property for a piece of content. For more information, see [Confluence entity
     * properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space, and
     * permission to view the content if it is a page.
     */
    getContentProperty<T = Models.ContentProperty>(parameters: Parameters.GetContentProperty, callback?: never): Promise<T>;
    /**
     * Creates a property for an existing piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * This is the same as [Create content property](#api-content-id-property-post) except that the key is specified as a
     * path parameter instead of in the request body.
     *
     * Content properties can also be added when creating a new piece of content by including them in the
     * `metadata.properties` of the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createContentPropertyForKey<T = Models.ContentProperty>(parameters: Parameters.CreateContentPropertyForKey, callback: Callback<T>): Promise<void>;
    /**
     * Creates a property for an existing piece of content. For more information about content properties, see [Confluence
     * entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * This is the same as [Create content property](#api-content-id-property-post) except that the key is specified as a
     * path parameter instead of in the request body.
     *
     * Content properties can also be added when creating a new piece of content by including them in the
     * `metadata.properties` of the request.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createContentPropertyForKey<T = Models.ContentProperty>(parameters: Parameters.CreateContentPropertyForKey, callback?: never): Promise<T>;
    /**
     * Updates an existing content property. This method will also create a new property for a piece of content, if the
     * property key does not exist and the property version is 1. For more information about content properties, see
     * [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateContentProperty<T = Models.ContentProperty>(parameters: Parameters.UpdateContentProperty, callback: Callback<T>): Promise<void>;
    /**
     * Updates an existing content property. This method will also create a new property for a piece of content, if the
     * property key does not exist and the property version is 1. For more information about content properties, see
     * [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateContentProperty<T = Models.ContentProperty>(parameters: Parameters.UpdateContentProperty, callback?: never): Promise<T>;
    /**
     * Deletes a content property. For more information about content properties, see [Confluence entity
     * properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    deleteContentProperty<T = void>(parameters: Parameters.DeleteContentProperty, callback: Callback<T>): Promise<void>;
    /**
     * Deletes a content property. For more information about content properties, see [Confluence entity
     * properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    deleteContentProperty<T = void>(parameters: Parameters.DeleteContentProperty, callback?: never): Promise<T>;
}
