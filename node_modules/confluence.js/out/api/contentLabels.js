"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentLabels = void 0;
const tslib_1 = require("tslib");
class ContentLabels {
    constructor(client) {
        this.client = client;
    }
    getLabelsForContent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/label`,
                method: 'GET',
                params: {
                    prefix: parameters.prefix,
                    start: parameters.start,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    addLabelsToContent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/label`,
                method: 'POST',
                params: {
                    'use-400-error-response': parameters['use-400-error-response'],
                },
                data: parameters.body,
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeLabelFromContentUsingQueryParameter(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/label`,
                method: 'DELETE',
                params: {
                    name: parameters.name,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeLabelFromContent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/label/${parameters.label}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentLabels = ContentLabels;
//# sourceMappingURL=contentLabels.js.map