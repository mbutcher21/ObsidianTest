import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class Search {
    private client;
    constructor(client: Client);
    /** @deprecated Will be removed in the next major version. Use `searchByCQL` instead. */
    search<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.Search, callback: Callback<T>): Promise<void>;
    /** @deprecated Will be removed in the next major version. Use `searchByCQL` instead. */
    search<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.Search, callback?: never): Promise<T>;
    /**
     * Searches for content using the [Confluence Query Language
     * (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)
     *
     * When additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The
     * URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of
     * results returned in each call.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the entities. Note, only
     * entities that the user has permission to view will be returned.
     */
    searchByCQL<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.SearchByCQL, callback: Callback<T>): Promise<void>;
    /**
     * Searches for content using the [Confluence Query Language
     * (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)
     *
     * When additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The
     * URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of
     * results returned in each call.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the entities. Note, only
     * entities that the user has permission to view will be returned.
     */
    searchByCQL<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.SearchByCQL, callback?: never): Promise<T>;
    /** @deprecated Will be removed in the next major version. Use `searchUser` instead. */
    userSearch<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.UserSearch, callback: Callback<T>): Promise<void>;
    /** @deprecated Will be removed in the next major version. Use `searchUser` instead. */
    userSearch<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.UserSearch, callback?: never): Promise<T>;
    /**
     * Searches for users using user-specific queries from the [Confluence Query Language
     * (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).
     *
     * Note that some user fields may be set to null depending on the user's privacy settings. These are: email,
     * profilePicture, displayName, and timeZone.
     */
    searchUser<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.SearchUser, callback: Callback<T>): Promise<void>;
    /**
     * Searches for users using user-specific queries from the [Confluence Query Language
     * (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).
     *
     * Note that some user fields may be set to null depending on the user's privacy settings. These are: email,
     * profilePicture, displayName, and timeZone.
     */
    searchUser<T = Models.SearchPageResponseSearchResult>(parameters: Parameters.SearchUser, callback?: never): Promise<T>;
}
