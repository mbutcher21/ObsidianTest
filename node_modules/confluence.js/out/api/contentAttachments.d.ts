/// <reference types="node" />
import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class ContentAttachments {
    private client;
    constructor(client: Client);
    /**
     * Returns the attachments for a piece of content.
     *
     * By default, the following objects are expanded: `metadata`.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the
     * content is a blog post, 'View' permission for the space is required.
     */
    getAttachments<T = Models.ContentArray<Models.Attachment>>(parameters: Parameters.GetAttachments, callback: Callback<T>): Promise<void>;
    /**
     * Returns the attachments for a piece of content.
     *
     * By default, the following objects are expanded: `metadata`.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the
     * content is a blog post, 'View' permission for the space is required.
     */
    getAttachments<T = Models.ContentArray<Models.Attachment>>(parameters: Parameters.GetAttachments, callback?: never): Promise<T>;
    /**
     * Adds an attachment to a piece of content. This method only adds a new attachment. If you want to update an existing
     * attachment, use [Create or update
     * attachments](https://developer.atlassian.com/cloud/confluence/rest/api-group-content---attachments/#api-wiki-rest-api-content-id-child-attachment-put).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createAttachments<T = Models.ContentArray<Models.CreatedAttachment>>(parameters: Parameters.CreateAttachments, callback: Callback<T>): Promise<void>;
    /**
     * Adds an attachment to a piece of content. This method only adds a new attachment. If you want to update an existing
     * attachment, use [Create or update
     * attachments](https://developer.atlassian.com/cloud/confluence/rest/api-group-content---attachments/#api-wiki-rest-api-content-id-child-attachment-put).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createAttachments<T = Models.ContentArray<Models.CreatedAttachment>>(parameters: Parameters.CreateAttachments, callback?: never): Promise<T>;
    /**
     * Adds an attachment to a piece of content. If the attachment already exists for the content, then the attachment is
     * updated (i.e. a new version of the attachment is created).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createOrUpdateAttachments<T = Models.ContentArray<Models.CreatedAttachment>>(parameters: Parameters.CreateOrUpdateAttachments, callback: Callback<T>): Promise<void>;
    /**
     * Adds an attachment to a piece of content. If the attachment already exists for the content, then the attachment is
     * updated (i.e. a new version of the attachment is created).
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    createOrUpdateAttachments<T = Models.ContentArray<Models.CreatedAttachment>>(parameters: Parameters.CreateOrUpdateAttachments, callback?: never): Promise<T>;
    /**
     * Updates the attachment properties, i.e. the non-binary data of an attachment like the filename, media-type,
     * comment, and parent container.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateAttachmentProperties<T = Models.CreatedAttachment>(parameters: Parameters.UpdateAttachmentProperties, callback: Callback<T>): Promise<void>;
    /**
     * Updates the attachment properties, i.e. the non-binary data of an attachment like the filename, media-type,
     * comment, and parent container.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateAttachmentProperties<T = Models.CreatedAttachment>(parameters: Parameters.UpdateAttachmentProperties, callback?: never): Promise<T>;
    /**
     * Updates the binary data of an attachment, given the attachment ID, and optionally the comment and the minor edit
     * field.
     *
     * This method is essentially the same as [Create or update
     * attachments](https://developer.atlassian.com/cloud/confluence/rest/api-group-content---attachments/#api-wiki-rest-api-content-id-child-attachment-put),
     * except that it matches the attachment ID rather than the name.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateAttachmentData<T = Models.CreatedAttachment>(parameters: Parameters.UpdateAttachmentData, callback: Callback<T>): Promise<void>;
    /**
     * Updates the binary data of an attachment, given the attachment ID, and optionally the comment and the minor edit
     * field.
     *
     * This method is essentially the same as [Create or update
     * attachments](https://developer.atlassian.com/cloud/confluence/rest/api-group-content---attachments/#api-wiki-rest-api-content-id-child-attachment-put),
     * except that it matches the attachment ID rather than the name.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     */
    updateAttachmentData<T = Models.CreatedAttachment>(parameters: Parameters.UpdateAttachmentData, callback?: never): Promise<T>;
    /** Redirects the client to a URL that serves an attachment's binary data. */
    downloadAttachment<T = Buffer>(parameters: Parameters.DownloadAttachment, callback: Callback<T>): Promise<void>;
    /** Redirects the client to a URL that serves an attachment's binary data. */
    downloadAttachment<T = Buffer>(parameters: Parameters.DownloadAttachment, callback?: never): Promise<T>;
}
