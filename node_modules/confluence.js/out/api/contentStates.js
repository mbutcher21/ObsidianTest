"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentStates = void 0;
const tslib_1 = require("tslib");
class ContentStates {
    constructor(client) {
        this.client = client;
    }
    getContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/state`,
                method: 'GET',
                params: {
                    status: parameters.status,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/state`,
                method: 'PUT',
                params: {
                    status: parameters.status,
                },
                data: {
                    name: parameters.name,
                    color: parameters.color,
                    id: parameters.stateId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/state`,
                method: 'DELETE',
                params: {
                    status: parameters.status,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvailableContentStates(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/state/available`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getCustomContentStates(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/api/content-states',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getSpaceContentStates(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/state`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getContentStateSettings(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/state/settings`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentStates = ContentStates;
//# sourceMappingURL=contentStates.js.map