import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class InlineTasks {
    private client;
    constructor(client: Client);
    /**
     * Returns inline tasks based on the search query.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission). Only tasks in contents that the user has permission to view are returned.
     */
    searchTasks<T = Models.TaskPageResponse>(parameters: Parameters.SearchTasks | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns inline tasks based on the search query.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission). Only tasks in contents that the user has permission to view are returned.
     */
    searchTasks<T = Models.TaskPageResponse>(parameters?: Parameters.SearchTasks, callback?: never): Promise<T>;
    /**
     * Returns inline task based on the global ID.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content associated
     * with the task.
     */
    getTaskById<T = Models.Task>(parameters: Parameters.GetTaskById, callback: Callback<T>): Promise<void>;
    /**
     * Returns inline task based on the global ID.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content associated
     * with the task.
     */
    getTaskById<T = Models.Task>(parameters: Parameters.GetTaskById, callback?: never): Promise<T>;
    /**
     * Updates an inline tasks status given its global ID
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content associated
     * with the task.
     */
    updateTaskById<T = Models.Task>(parameters: Parameters.UpdateTaskById, callback: Callback<T>): Promise<void>;
    /**
     * Updates an inline tasks status given its global ID
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content associated
     * with the task.
     */
    updateTaskById<T = Models.Task>(parameters: Parameters.UpdateTaskById, callback?: never): Promise<T>;
}
