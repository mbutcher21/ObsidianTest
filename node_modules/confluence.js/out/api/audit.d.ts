import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class Audit {
    private client;
    constructor(client: Client);
    /**
     * Returns all records in the audit log, optionally for a certain date range. This contains information about events
     * like space exports, group membership changes, app installations, etc. For more information, see [Audit
     * log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) in the Confluence administrator's guide.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getAuditRecords<T = Models.AuditRecordArray>(parameters: Parameters.GetAuditRecords | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns all records in the audit log, optionally for a certain date range. This contains information about events
     * like space exports, group membership changes, app installations, etc. For more information, see [Audit
     * log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) in the Confluence administrator's guide.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getAuditRecords<T = Models.AuditRecordArray>(parameters?: Parameters.GetAuditRecords, callback?: never): Promise<T>;
    /**
     * Creates a record in the audit log.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    createAuditRecord<T = Models.AuditRecord>(parameters: Parameters.CreateAuditRecord | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Creates a record in the audit log.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    createAuditRecord<T = Models.AuditRecord>(parameters?: Parameters.CreateAuditRecord, callback?: never): Promise<T>;
    /**
     * Exports audit records as a CSV file or ZIP file.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    exportAuditRecords<T = unknown>(parameters: Parameters.ExportAuditRecords | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Exports audit records as a CSV file or ZIP file.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    exportAuditRecords<T = unknown>(parameters?: Parameters.ExportAuditRecords, callback?: never): Promise<T>;
    /**
     * Returns the retention period for records in the audit log. The retention period is how long an audit record is kept
     * for, from creation date until it is deleted.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getRetentionPeriod<T = Models.RetentionPeriod>(callback: Callback<T>): Promise<void>;
    /**
     * Returns the retention period for records in the audit log. The retention period is how long an audit record is kept
     * for, from creation date until it is deleted.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getRetentionPeriod<T = Models.RetentionPeriod>(callback?: never): Promise<T>;
    /**
     * Sets the retention period for records in the audit log. The retention period can be set to a maximum of 20 years.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    setRetentionPeriod<T = Models.RetentionPeriod>(parameters: Parameters.SetRetentionPeriod | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Sets the retention period for records in the audit log. The retention period can be set to a maximum of 20 years.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    setRetentionPeriod<T = Models.RetentionPeriod>(parameters?: Parameters.SetRetentionPeriod, callback?: never): Promise<T>;
    /**
     * Returns records from the audit log, for a time period back from the current date. For example, you can use this
     * method to get the last 3 months of records.
     *
     * This contains information about events like space exports, group membership changes, app installations, etc. For
     * more information, see [Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) in the
     * Confluence administrator's guide.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getAuditRecordsForTimePeriod<T = Models.AuditRecordArray>(parameters: Parameters.GetAuditRecordsForTimePeriod | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns records from the audit log, for a time period back from the current date. For example, you can use this
     * method to get the last 3 months of records.
     *
     * This contains information about events like space exports, group membership changes, app installations, etc. For
     * more information, see [Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html) in the
     * Confluence administrator's guide.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Confluence Administrator' global
     * permission.
     */
    getAuditRecordsForTimePeriod<T = Models.AuditRecordArray>(parameters?: Parameters.GetAuditRecordsForTimePeriod, callback?: never): Promise<T>;
}
