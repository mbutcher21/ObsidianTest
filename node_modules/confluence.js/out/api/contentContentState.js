"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentContentState = void 0;
const tslib_1 = require("tslib");
/** @deprecated Use {@link ContentStates} instead. */
class ContentContentState {
    /** @deprecated */
    constructor(client) {
        this.client = client;
    }
    getContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.contentId}/state`,
                method: 'GET',
                params: {
                    designation: parameters.designation,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.contentId}/state`,
                method: 'PUT',
                params: {
                    contentStateId: parameters.contentStateId,
                    name: parameters.name,
                    color: parameters.color,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeContentState(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.contentId}/state`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getContentStateLastUpdated(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.contentId}/state/last-updated`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvailableContentStates(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.contentId}/state/available-states`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentContentState = ContentContentState;
//# sourceMappingURL=contentContentState.js.map