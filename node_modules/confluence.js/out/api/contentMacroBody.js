"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentMacroBody = void 0;
const tslib_1 = require("tslib");
class ContentMacroBody {
    constructor(client) {
        this.client = client;
    }
    getMacroBodyByMacroId(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/history/${parameters.version}/macro/id/${parameters.macroId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAndConvertMacroBodyByMacroId(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/history/${parameters.version}/macro/id/${parameters.macroId}/convert/${parameters.to}`,
                method: 'GET',
                params: {
                    spaceKeyContext: parameters.spaceKeyContext,
                    embeddedContentRender: parameters.embeddedContentRender,
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAndAsyncConvertMacroBodyByMacroId(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/history/${parameters.version}/macro/id/${parameters.macroId}/convert/async/${parameters.to}`,
                method: 'GET',
                params: {
                    allowCache: parameters.allowCache,
                    spaceKeyContext: parameters.spaceKeyContext,
                    embeddedContentRender: parameters.embeddedContentRender,
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentMacroBody = ContentMacroBody;
//# sourceMappingURL=contentMacroBody.js.map