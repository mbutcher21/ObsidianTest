import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class SpaceSettings {
    private client;
    constructor(client: Client);
    /**
     * Returns the settings of a space. Currently only the `routeOverrideEnabled` setting can be returned.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space.
     */
    getSpaceSettings<T = Models.SpaceSettings>(parameters: Parameters.GetSpaceSettings, callback: Callback<T>): Promise<void>;
    /**
     * Returns the settings of a space. Currently only the `routeOverrideEnabled` setting can be returned.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space.
     */
    getSpaceSettings<T = Models.SpaceSettings>(parameters: Parameters.GetSpaceSettings, callback?: never): Promise<T>;
    /**
     * Updates the settings for a space. Currently only the `routeOverrideEnabled` setting can be updated.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    updateSpaceSettings<T = Models.SpaceSettings>(parameters: Parameters.UpdateSpaceSettings, callback: Callback<T>): Promise<void>;
    /**
     * Updates the settings for a space. Currently only the `routeOverrideEnabled` setting can be updated.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    updateSpaceSettings<T = Models.SpaceSettings>(parameters: Parameters.UpdateSpaceSettings, callback?: never): Promise<T>;
}
