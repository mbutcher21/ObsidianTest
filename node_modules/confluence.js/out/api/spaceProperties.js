"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpaceProperties = void 0;
const tslib_1 = require("tslib");
class SpaceProperties {
    constructor(client) {
        this.client = client;
    }
    getSpaceProperties(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property`,
                method: 'GET',
                params: {
                    expand: parameters.expand,
                    start: parameters.start,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createSpaceProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property`,
                method: 'POST',
                data: {
                    key: parameters.key,
                    value: parameters.value,
                    space: parameters.space,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getSpaceProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property/${parameters.key}`,
                method: 'GET',
                params: {
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createSpacePropertyForKey(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property/${parameters.key}`,
                method: 'POST',
                data: {
                    value: parameters.value,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    updateSpaceProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property/${parameters.key}`,
                method: 'PUT',
                data: {
                    value: parameters.value,
                    version: parameters.version,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteSpaceProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/space/${parameters.spaceKey}/property/${parameters.key}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.SpaceProperties = SpaceProperties;
//# sourceMappingURL=spaceProperties.js.map