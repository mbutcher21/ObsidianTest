"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentVersions = void 0;
const tslib_1 = require("tslib");
class ContentVersions {
    constructor(client) {
        this.client = client;
    }
    getContentVersions(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/version`,
                method: 'GET',
                params: {
                    start: parameters.start,
                    limit: parameters.limit,
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    restoreContentVersion(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/version`,
                method: 'POST',
                params: {
                    expand: parameters.expand,
                },
                data: {
                    operationKey: parameters.operationKey,
                    params: parameters.params,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getContentVersion(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/version/${parameters.versionNumber}`,
                method: 'GET',
                params: {
                    expand: parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteContentVersion(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/content/${parameters.id}/version/${parameters.versionNumber}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentVersions = ContentVersions;
//# sourceMappingURL=contentVersions.js.map