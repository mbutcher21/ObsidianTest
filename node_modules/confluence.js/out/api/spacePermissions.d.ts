import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class SpacePermissions {
    private client;
    constructor(client: Client);
    /** @deprecated Will be removed in the next major version. Use `addPermissionToSpace` instead. */
    addPermission<T = Models.SpacePermissionV2>(parameters: Parameters.AddPermission, callback: Callback<T>): Promise<void>;
    /** @deprecated Will be removed in the next major version. Use `addPermissionToSpace` instead. */
    addPermission<T = Models.SpacePermissionV2>(parameters: Parameters.AddPermission, callback?: never): Promise<T>;
    /**
     * Adds new permission to space.
     *
     * If the permission to be added is a group permission, the group can be identified by its group name or group id.
     *
     * Note: Apps cannot access this REST resource - including when utilizing user impersonation.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    addPermissionToSpace<T = Models.SpacePermissionV2>(parameters: Parameters.AddPermissionToSpace, callback: Callback<T>): Promise<void>;
    /**
     * Adds new permission to space.
     *
     * If the permission to be added is a group permission, the group can be identified by its group name or group id.
     *
     * Note: Apps cannot access this REST resource - including when utilizing user impersonation.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    addPermissionToSpace<T = Models.SpacePermissionV2>(parameters: Parameters.AddPermissionToSpace, callback?: never): Promise<T>;
    /**
     * Adds new custom content permission to space.
     *
     * If the permission to be added is a group permission, the group can be identified by its group name or group id.
     *
     * Note: Only apps can access this REST resource and only make changes to the respective app permissions.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    addCustomContentPermissions<T = unknown>(parameters: Parameters.AddCustomContentPermissions, callback: Callback<T>): Promise<void>;
    /**
     * Adds new custom content permission to space.
     *
     * If the permission to be added is a group permission, the group can be identified by its group name or group id.
     *
     * Note: Only apps can access this REST resource and only make changes to the respective app permissions.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    addCustomContentPermissions<T = unknown>(parameters: Parameters.AddCustomContentPermissions, callback?: never): Promise<T>;
    /**
     * Removes a space permission. Note that removing Read Space permission for a user or group will remove all the space
     * permissions for that user or group.
     *
     * Note: Apps cannot access this REST resource - including when utilizing user impersonation.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    removePermission<T = void>(parameters: Parameters.RemovePermission, callback: Callback<T>): Promise<void>;
    /**
     * Removes a space permission. Note that removing Read Space permission for a user or group will remove all the space
     * permissions for that user or group.
     *
     * Note: Apps cannot access this REST resource - including when utilizing user impersonation.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Admin' permission for the space.
     */
    removePermission<T = void>(parameters: Parameters.RemovePermission, callback?: never): Promise<T>;
}
