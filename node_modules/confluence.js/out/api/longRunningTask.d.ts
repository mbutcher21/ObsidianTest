import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class LongRunningTask {
    private client;
    constructor(client: Client);
    /**
     * Returns information about all active long-running tasks (e.g. space export), such as how long each task has been
     * running and the percentage of each task that has completed.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission).
     */
    getTasks<T = Models.LongTaskStatusArray>(parameters: Parameters.GetTasks | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns information about all active long-running tasks (e.g. space export), such as how long each task has been
     * running and the percentage of each task that has completed.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission).
     */
    getTasks<T = Models.LongTaskStatusArray>(parameters?: Parameters.GetTasks, callback?: never): Promise<T>;
    /**
     * Returns information about an active long-running task (e.g. space export), such as how long it has been running and
     * the percentage of the task that has completed.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission).
     */
    getTask<T = Models.LongTaskStatusWithLinks>(parameters: Parameters.GetTask, callback: Callback<T>): Promise<void>;
    /**
     * Returns information about an active long-running task (e.g. space export), such as how long it has been running and
     * the percentage of the task that has completed.
     *
     * **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site
     * ('Can use' global permission).
     */
    getTask<T = Models.LongTaskStatusWithLinks>(parameters: Parameters.GetTask, callback?: never): Promise<T>;
}
