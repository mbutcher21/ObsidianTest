"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentBody = void 0;
const tslib_1 = require("tslib");
class ContentBody {
    constructor(client) {
        this.client = client;
    }
    convertContentBody(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/contentbody/convert/${parameters.to}`,
                method: 'POST',
                params: {
                    spaceKeyContext: parameters.spaceKeyContext,
                    contentIdContext: parameters.contentIdContext,
                    embeddedContentRender: parameters.embeddedContentRender,
                    expand: parameters.expand,
                },
                data: Object.assign({ value: parameters.value, representation: parameters.representation }, parameters.additionalProperties),
            };
            return this.client.sendRequest(config, callback);
        });
    }
    asyncConvertContentBodyRequest(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/contentbody/convert/async/${parameters.to}`,
                method: 'POST',
                params: {
                    spaceKeyContext: parameters.spaceKeyContext,
                    contentIdContext: parameters.contentIdContext,
                    allowCache: parameters.allowCache,
                    embeddedContentRender: parameters.embeddedContentRender,
                    expand: parameters.expand,
                },
                data: Object.assign({ value: parameters.value, representation: parameters.representation }, parameters.additionalProperties),
            };
            return this.client.sendRequest(config, callback);
        });
    }
    asyncConvertContentBodyResponse(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/api/contentbody/convert/async/${parameters.id}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ContentBody = ContentBody;
//# sourceMappingURL=contentBody.js.map